<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mdr="clr-namespace:Wpf.Modern.Themes.Controls"
                    xmlns:cv="clr-namespace:Wpf.Modern.Themes.Converters"
                    xmlns:helper="clr-namespace:Wpf.Modern.Themes.Controls.Helpers">
    <cv:BottomRightCornerRadiusDoubleValueConverter x:Key="BottomRightCornerRadiusDoubleValueConverter"/>
    <cv:TopLeftCornerRadiusDoubleValueConverter x:Key="TopLeftCornerRadiusDoubleValueConverter"/>
    
    <Style x:Key="GithubDefaultProgressBarStyle" TargetType="mdr:ModernProgressBar">
        <Setter Property="ErrorBrush" Value="{DynamicResource FgColorDangerBrush}"/>
        <Setter Property="PausedBrush" Value="{DynamicResource ControlBorderColorWarningBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonPrimaryBgColorRestBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBgColorRestBrush}"/>
        <Setter Property="Height" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mdr:ModernProgressBar">
                    <Grid x:Name="LayoutRoot" RenderTransformOrigin="0,0.5">
                        <Border x:Name="ProgressBarRoot" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}" 
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{TemplateBinding Background}"
                                Height="{TemplateBinding Height}"/>
                        <Rectangle x:Name="PART_Track" 
                                   RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}" 
                                   RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"/>
                        <Grid x:Name="PART_Indicator" HorizontalAlignment="Left" ClipToBounds="true">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" 
                                        RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}" 
                                       RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5"
                                       RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}" 
                                       RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ShowPaused" Value="True">
                            <Setter TargetName="Indicator" Property="Fill" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PausedBrush, Mode=OneWay}"/>
                            <Setter TargetName="Animation" Property="Fill" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PausedBrush, Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="ShowError" Value="True">
                            <Setter TargetName="Indicator" Property="Fill" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ErrorBrush, Mode=OneWay}"/>
                            <Setter TargetName="Animation" Property="Fill" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ErrorBrush, Mode=OneWay}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>