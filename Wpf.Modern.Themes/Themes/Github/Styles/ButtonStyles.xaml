<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mdr="clr-namespace:Wpf.Modern.Themes.Controls"
                    xmlns:helper="clr-namespace:Wpf.Modern.Themes.Controls.Helpers">
    <Style x:Key="GithubDefaultButtonStyle" TargetType="mdr:ModernButton">
        <Setter Property="Padding" Value="12,3"/>
        <Setter Property="helper:ThemeHelper.MouseOverBackgroundBrush" Value="{DynamicResource ButtonDefaultBgColorHoverBrush}"/>
        <Setter Property="helper:ThemeHelper.MouseOverBorderBrush" Value="{DynamicResource ButtonDefaultBorderColorHoverBrush}"/>
        <Setter Property="helper:ThemeHelper.PressedBackgroundBrush" Value="{DynamicResource ButtonDefaultBgColorActiveBrush}"/>
        <Setter Property="helper:ThemeHelper.PressedBorderBrush" Value="{DynamicResource ButtonDefaultBorderColorActiveBrush}"/>
        <Setter Property="helper:ThemeHelper.DisabledBackgroundBrush" Value="{DynamicResource ButtonDefaultBgColorDisabledBrush}"/>
        <Setter Property="helper:ThemeHelper.DisabledBorderBrush" Value="{DynamicResource ButtonDefaultBorderColorDisabledBrush}"/>
        <Setter Property="helper:ThemeHelper.FocusBrush" Value="{DynamicResource BorderColorAccentEmphasisBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonDefaultBgColorRestBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorderColorRestBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultFgColorRestBrush}"/>
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mdr:ModernButton">
                    <Grid>
                        <Border x:Name="BorderVisual"  TextBlock.Foreground="{TemplateBinding Foreground}" 
                                CornerRadius="{TemplateBinding CornerRadius}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border x:Name="FocusVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="2"
                                BorderBrush="{TemplateBinding helper:ThemeHelper.FocusBrush}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <ContentPresenter x:Name="ContentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" 
                                          Focusable="False"/>
                    </Grid>
                   
                    <ControlTemplate.Triggers>

                         <!--General IsKeyboardFocused setters--> 
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                        </MultiTrigger>
                         <!--disabled and focused--> 
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.MouseOverBackgroundBrush), Mode=OneWay}"/>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.MouseOverBorderBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.PressedBackgroundBrush), Mode=OneWay}"/>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.PressedBorderBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.3"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.DisabledBackgroundBrush), Mode=OneWay}"/>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.DisabledBorderBrush), Mode=OneWay}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GithubPrimaryButtonStyle" TargetType="mdr:ModernButton">
        <Setter Property="Padding" Value="12,3"/>
        <Setter Property="helper:ThemeHelper.MouseOverBackgroundBrush" Value="{DynamicResource ButtonPrimaryBgColorHoverBrush}"/>
        <Setter Property="helper:ThemeHelper.MouseOverBorderBrush" Value="{DynamicResource ButtonPrimaryBorderColorHoverBrush}"/>
        <Setter Property="helper:ThemeHelper.PressedBackgroundBrush" Value="{DynamicResource ButtonPrimaryBgColorActiveBrush}"/>
        <Setter Property="helper:ThemeHelper.PressedBorderBrush" Value="{DynamicResource ButtonPrimaryBorderColorActiveBrush}"/>
        <Setter Property="helper:ThemeHelper.DisabledBackgroundBrush" Value="{DynamicResource ButtonPrimaryBgColorDisabledBrush}"/>
        <Setter Property="helper:ThemeHelper.DisabledBorderBrush" Value="{DynamicResource ButtonPrimaryBorderColorDisabledBrush}"/>
        <Setter Property="helper:ThemeHelper.FocusBrush" Value="{DynamicResource BorderColorAccentEmphasisBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonPrimaryBgColorRestBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonPrimaryBorderColorRestBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonPrimaryFgColorRestBrush}"/>
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mdr:ModernButton">
                    <Grid>
                        <Border x:Name="BorderVisual"  TextBlock.Foreground="{TemplateBinding Foreground}" 
                        CornerRadius="{TemplateBinding CornerRadius}" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border x:Name="FocusVisual"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        Visibility="Collapsed"
                        IsHitTestVisible="False"
                        BorderThickness="2"
                        BorderBrush="{TemplateBinding helper:ThemeHelper.FocusBrush}"
                        CornerRadius="{TemplateBinding CornerRadius}"/>
                        <ContentPresenter x:Name="ContentPresenter" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True" 
                                  Focusable="False"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <!--General IsKeyboardFocused setters-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                        </MultiTrigger>
                        <!--disabled and focused-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.MouseOverBackgroundBrush), Mode=OneWay}"/>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.MouseOverBorderBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.PressedBackgroundBrush), Mode=OneWay}"/>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.PressedBorderBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.3"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.DisabledBackgroundBrush), Mode=OneWay}"/>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:ThemeHelper.DisabledBorderBrush), Mode=OneWay}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>